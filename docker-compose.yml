---
version: '2'
services:

  zookeeper:
    image: confluentinc/cp-zookeeper:6.0.1
    # container_name: zookeeper
    networks:
      - exam_network    
    ports:
      - 2181:2181      
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:6.0.1
    container_name: broker
    networks:
      - exam_network    
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100

  kafka-connect:
    image: confluentinc/cp-kafka-connect-base:6.0.1
    container_name: kafka-connect
    networks:
      - exam_network    
    depends_on:
      - broker
      # - schema-registry
    ports:
      - 8083:8083
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "broker:29092"
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: kafka-connect
      CONNECT_CONFIG_STORAGE_TOPIC: _connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: _connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: _connect-status
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
      # CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      # CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
      CONNECT_LOG4J_APPENDER_STDOUT_LAYOUT_CONVERSIONPATTERN: "[%d] %p %X{connector.context}%m (%c:%L)%n"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_PLUGIN_PATH: /usr/share/java,/usr/share/confluent-hub-components,/data/connect-jars
    volumes:
      - $PWD/data:/data
    command:
      - bash
      - -c
      - |
        echo "Installing Connector"
        confluent-hub install --no-prompt mongodb/kafka-connect-mongodb:1.4.0
        confluent-hub install --no-prompt debezium/debezium-connector-mongodb:1.4.0        
        # confluent-hub install --no-prompt hpgrahsl/kafka-connect-mongodb:1.4.0
        # confluent-hub install --no-prompt debezium/debezium-connector-mysql:1.3.1
        # confluent-hub install --no-prompt confluentinc/kafka-connect-elasticsearch:10.0.1
        # confluent-hub install --no-prompt neo4j/kafka-connect-neo4j:1.0.9
        #
        echo "Launching Kafka Connect worker"
        /etc/confluent/docker/run &
        #
        sleep infinity

  kafka-connect-ui:
    image: landoop/kafka-connect-ui:0.9.4
    hostname: kafka-connect-ui
    ports:
      - 8003:8003
    environment:
      CONNECT_URL: "http://kafka-connect:8083/"
      PROXY: "true"
    depends_on:
      - kafka-connect

  mongo1:
    image: mongo:4.4.4
    container_name: mongo1
    expose:
      - 27017
    ports:
      - 27017:27017      
    networks:
      - exam_network
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "r0" ]

  mongo2:
    image: mongo:4.4.4
    container_name: mongo2
    expose:
      - 27017
    networks:
      - exam_network
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "r0" ]

  mongo3:
    image: mongo:4.4.4
    container_name: mongo3
    expose:
      - 27017
    networks:
      - exam_network
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "r0" ]

  mongoku:
    image: huggingface/mongoku
    container_name: mongoku
    ports:
      - 3100:3100
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    networks:
      - exam_network
    environment:
      MONGOKU_DEFAULT_HOST: "mongodb://mongo1:27017"


networks:
  exam_network:
